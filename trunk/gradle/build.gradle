apply plugin: 'java'
apply plugin: 'eclipse'

def eclipseProjectName = 'testapp'
def eclipseProjectComment = 'my test application'
def jarManifestMainClass = 'me.hatter.tools.xxx.Main'

archivesBaseName = 'testapp'
sourceCompatibility = 1.5
targetCompatibility = 1.5

task initapp << {
  file('lib').mkdirs()
  file('src/main/java').mkdirs()
  file('src/main/resources').mkdirs()
  file('src/test/java').mkdirs()
  file('src/test/resources').mkdirs()
  println 'Init app finished [lib, src/main/java|resources, src/test/java|resources].'
}

task install << {
  def installTargetBin = '/usr/local/bin/'
  def installBinDirLib = "testapp_lib"
  if (!file("${installTargetBin}${installBinDirLib}").exists()) {
    file("${installTargetBin}${installBinDirLib}").mkdirs()
  }
  copy {
    from ('.')
    into "${installTargetBin}${installBinDirLib}/"
    include 'testapp.lib'
  }
  copy {
    from ('.')
    into "${installTargetBin}"
    include 'testappbin'
  }
  ant.chmod(file: "${installTargetBin}testappbin", perm: 'a+x')
}

dependencies {
    compile files(fileTree(dir: 'lib', includes: ['*.jar']))
}

eclipse {
  project {
    name = eclipseProjectName
    comment = eclipseProjectComment
  }
  classpath {
    defaultOutputDir = file('classes')
  }
}

jar {
  manifest {
    attributes('Main-Class': jarManifestMainClass)
  }
}

