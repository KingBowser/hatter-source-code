<html>
<head><title>ResourceProxy Usage</title></head>
<body>
  <h1>ResourceProxy Usage</h1>
  <a href="/"> &lt;&lt; Back </a>
  <ol>
    <li>What is ResourceProxy?</li>
    ResourceProxy is a tool for online JavaScript, CSS debug. It is a proxy tool. ResourceProxy give you the way to format, modify the online JavaScript, CSS resource(s).<br/><br/>
    <li>How does ResourceProxy work?</li>
    ResourceProxy work like the graph below:<br/>
    <img src="resourceproxy.png"/><br/>
    The proxy use the 'Host' field(<a href="http://www.ietf.org/rfc/rfc2616.txt" target="_blank">RFC 2616</a> Section 14.23) in http request header to know the resource uri.<br/>
    Example: Access http://www.example.com/hello_world.txt from the browser.<br/>
    Add this to the /etc/hosts:<br>
    <pre>10.20.157.110	www.example.com</pre>
    Client request (send to the proxy):<br/>
    <pre>
    GET /hello_world.txt HTTP/1.0
    Host: www.example.com</pre>
    Proxy received the request:<br/>
    Find from database<br>
      <pre>select * from http_object where ip=&lt;client's ip&gt; and url=&lt;request's host+path&gt;</pre>
    Not found:
    Proxy resend the request(send to the real server):<br/>
    <pre>
    GET /hello_world.txt HTTP/1.0
    Host: www.example.com</pre>
    The server received the request and return:
    <pre>
    HTTP/1.0 200 OK
    Date: Mon, 05 Mar 2012 06:28:45 GMT
    Server: Apache
    Content-Language: en-US
    Connection: Close
    Transfer-Encoding: chunked
    Content-Type: text/plain;charset=UTF-8
    
    Returned contents...</pre>
    Then the proxy received the response, record to the database and return the real response to the client.
    <li>How to install ResourceProxy?</li>
    Check out: <pre>https://hatter-source-code.googlecode.com/svn/trunk/resourceproxy</pre><br/>
    Build it by Ant(My ant version is: 1.7.0)<br/>
    Create sqlite data file: data.db<br/>
    <pre>
    CREATE TABLE http_object ( id INTEGER PRIMARY KEY, method TEXT, url TEXT, access_address TEXT, 
status INTEGER, status_message TEXT, content_type TEXT, charset TEXT, encoding TEXT, header TEXT, 
bytes TEXT, string TEXT, is_updated TEXT );
    CREATE UNIQUE INDEX idx_http_object_url_accaddr on http_object (url, access_address);
    </pre>
    Then run: startup<br/>
    <li>How to use it?</li>
    For example we debug www.baidu.com<br/>
    Step 1 Add host to your /etc/hosts (Unix/Linux, Mac) file:
    <pre>
    10.20.157.110      www.baidu.com
    </pre>
    Step 2 Access: www.baidu.com<br/>
    <img src="baidu1.png" border="1" style="border-color: black;"/><br/>
    Step 3 Access: http://c2.hatter.zj.cn/, you will see:<br/>
    <img src="resourceproxy1.png" border="1" style="border-color: black;width: 1100px;"/><br/>
    Step 4 Modify http://www.baidu.com/, and save it:
    <img src="resourceproxy2.png" border="1" style="border-color: black;width: 1100px;"/><br/>
    Step 5 Refresh www.baidu.com, and you see:<br/>
    <img src="baidu2.png" border="1" style="border-color: black;"/><br/>
    If you modify JavaScript file, you can format it.
    <li>Startup properties</li>
    -Ddebug&lt;no value&gt; set thread pool to single thread<br/>
    -Dthishost=example.com set current host domain, access local jssp file(s)<br/>
    -Dcheckjsspupdate=n set n second(s) to check jssp file if updated
  </ol>
</body>
</html>
