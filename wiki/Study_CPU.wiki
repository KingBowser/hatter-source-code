#summary CPU study


=X86=
X86或80X86，X86架构使用可变长度指令CISC(复杂指令集计算机,Complex Instruction Set Computer)。<br>
X86_32在Intel也称为IA32(Intel Architecture, 32-bit)，IA64

====Main registers====
|| `AX/EAX/RAX` || Accumulator ||
|| `BX/EBX/RBX` || Base index (for use with arrays) ||
|| `CX/ECX/RCX` || Counter ||
|| `DX/EDX/RDX` || Data/general ||
|| `SI/ESI/RSI` || Source index for string operations. ||
|| `DI/EDI/RDI` || Destination index for string operations. ||
|| `SP/ESP/RSP` || Stack pointer for top address of the stack. ||
|| `BP/EBP/RBP` || Stack base pointer for holding the address of the current stack frame. ||
|| `IP/EIP/RIP` || Instruction pointer. Holds the program counter, the current instruction address. ||

====Segment registers====
|| CS || Code ||
|| DS || Data ||
|| SS || Stack ||
|| ES || Extra ||
|| FS ||  ||
|| GS ||  ||

====General Purpose Registers (`A, B, C and D`)====
<table border="1">
  <tr align="center"><th width="50">`64`</th><th width="50">`56`</th><th width="50">`48`</th><th width="50">`40`</th><th width="50">`32`</th><th width="50">`24`</th><th width="50">`16`</th><th width="50">`8`</th></tr>
  <tr align="center"><td colspan="8">`R?X`</td></tr>
  <tr align="center"><td colspan="4">`--`</td><td colspan="4">`E?X`</td></tr>
  <tr align="center"><td colspan="6">`--`</td><td colspan="2">`?X`</td></tr>
  <tr align="center"><td colspan="6">`--`</td><td>`?H`</td><td>`?L`</td></tr>
</table>
<br><br>

====64-bit mode-only General Purpose Registers (`R8, R9, R10, R11, R12, R13, R14, R15`)====
<table border="1">
  <tr align="center"><th width="50">`64`</th><th width="50">`56`</th><th width="50">`48`</th><th width="50">`40`</th><th width="50">`32`</th><th width="50">`24`</th><th width="50">`16`</th><th width="50">`8`</th></tr>
  <tr align="center"><td colspan="8">`?`</td></tr>
  <tr align="center"><td colspan="4">`--`</td><td colspan="4">`?D`</td></tr>
  <tr align="center"><td colspan="6">`--`</td><td colspan="2">`?W`</td></tr>
  <tr align="center"><td colspan="7">`--`</td><td>`?B`</td></tr>
</table>
<br><br>

====Segment Registers (`C, D, S, E, F and G`)====
<table border="1">
  <tr align="center"><th width="50">`16`</th><th width="50">`8`</th></tr>
  <tr align="center"><td colspan="2">`?S`</td></tr>
</table>
<br><br>

====Pointer Registers (`S and B`)====
<table border="1">
  <tr align="center"><th width="50">`64`</th><th width="50">`56`</th><th width="50">`48`</th><th width="50">`40`</th><th width="50">`32`</th><th width="50">`24`</th><th width="50">`16`</th><th width="50">`8`</th></tr>
  <tr align="center"><td colspan="8">`R?P`</td></tr>
  <tr align="center"><td colspan="4">`--`</td><td colspan="4">`E?P`</td></tr>
  <tr align="center"><td colspan="6">`--`</td><td colspan="2">`?P`</td></tr>
  <tr align="center"><td colspan="7">`--`</td><td>`?PL`^注1^</td></tr>
</table>
<br><br>

====Index Registers (`S and D`)====
<table border="1">
  <tr align="center"><th width="50">`64`</th><th width="50">`56`</th><th width="50">`48`</th><th width="50">`40`</th><th width="50">`32`</th><th width="50">`24`</th><th width="50">`16`</th><th width="50">`8`</th></tr>
  <tr align="center"><td colspan="8">`R?I`</td></tr>
  <tr align="center"><td colspan="4">`--`</td><td colspan="4">`E?I`</td></tr>
  <tr align="center"><td colspan="6">`--`</td><td colspan="2">`?I`</td></tr>
  <tr align="center"><td colspan="7">`--`</td><td>`?IL`^注1^</td></tr>
</table>
<br><br>

====Instruction Pointer Register (`I`)====
<table border="1">
  <tr align="center"><th width="50">`64`</th><th width="50">`56`</th><th width="50">`48`</th><th width="50">`40`</th><th width="50">`32`</th><th width="50">`24`</th><th width="50">`16`</th><th width="50">`8`</th></tr>
  <tr align="center"><td colspan="8">`R?P`</td></tr>
  <tr align="center"><td colspan="4">`--`</td><td colspan="4">`E?P`</td></tr>
  <tr align="center"><td colspan="6">`--`</td><td colspan="2">`?P`</td></tr>
</table>
<br><br>
^注1^: The `?PL` `?IL` registers are only available in 64-bit mode.
<br><br>

=Intel=


 * [http://ark.intel.com/ ARK | Your source for information on Intel products]
  * [http://en.wikipedia.org/wiki/Xeon Xeon] 
 * [ftp://download.intel.com/design/ Intl Design Download]
 * [http://en.wikipedia.org/wiki/List_of_Intel_Xeon_microprocessors List]
 * [http://en.wikipedia.org/wiki/List_of_Intel_microprocessors List of Intel microprocessors]
 * [http://en.wikipedia.org/wiki/List_of_future_Intel_microprocessors List of future Intel microprocessors]


===参考资料===
`[1].` http://zh.wikipedia.org/wiki/X86<br>