#summary BTrace
#sidebar TableOfContents

==官方网站==
http://kenai.com/projects/btrace

BTrace2 http://kenai.com/projects/btrace/sources/btrace2/show

BTrace is a safe, dynamic tracing tool for the Java platform. BTrace can be used to dynamically trace a running Java program (similar to DTrace for OpenSolaris applications and OS). BTrace dynamically instruments the classes of the target application to inject tracing code ("bytecode tracing"). Tracing code is expressed in Java programming language. There is also integration with DTrace for the OpenSolaris platform.

BTrace 由至少一个 `public static void` 组成。

==原理介绍==
[http://docs.oracle.com/javase/6/docs/technotes/guides/instrumentation/index.html java.lang.instrument.Instrumentation]

==命令行==
{{{
btrace [-I <include-path>] [-p <port>] [-cp <classpath>] <pid> <btrace-script> [<args>]
}}}

==参数==
{{{
-Dcom.sun.btrace.probeDescPath=.
-Dcom.sun.btrace.dumpClasses=false
-Dcom.sun.btrace.debug=false
-Dcom.sun.btrace.unsafe=false

-Dcom.sun.btrace.trackRetransforms=false
-Dcom.sun.btrace.dumpDir=.
}}}

==工具==
*生成简单BTrace的工具* http://hatter.me/js/btrace/

==示例==
打印所有调用 `String.intern()` 的堆栈日志：
{{{
import com.sun.btrace.AnyType;
import com.sun.btrace.annotations.*;
import static com.sun.btrace.BTraceUtils.*;

@BTrace
public class Trace {

    @OnMethod(clazz = "/.*/", method = "/.*/", location = @Location(value = Kind.CALL, clazz = "java.lang.String", method = "intern"))
    public static void m0(@ProbeClassName String clazz, @ProbeMethodName String method, @TargetInstance Object instance) {
        println("\n==== java.lang.String#intern ====");
        jstack();
    }
}
}}}

=使用=

===参考资料===
`[1].` http://kenai.com/projects/btrace/pages/UserGuide<br>
`[2].` http://docs.oracle.com/javase/6/docs/technotes/guides/instrumentation/index.html<br>
`[3].` http://kenai.com/projects/btrace/sources/btrace2/show<br>