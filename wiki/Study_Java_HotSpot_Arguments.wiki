#summary HotSpot虚拟机的参数

==属性定义==
属性名由以下字符组成：
{{{
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_
}}}

==运行模式==
|| `-client`  || 即C1编译器 ||
|| `-server`  || 即C2编译器 ||

==编译模式==
|| `-Xint` || 解释模式，仅解释运行 ||
|| `-Xcomp` || 编译模式，先编译再运行 ||
|| `-Xmixed` || 混合模式，也是默认模式 ||

==Assertion Option==
|| `-da, -disableassertions` || ||
|| `-ea, -enableassertions` || ||
|| `-dsa, -disablesystemassertions` || ||
|| `-esa, -enablesystemassertions` || ||

==标准参数？==
|| *参数* || *具体参数* || *说明* ||
|| `-verbose:[class/gc/jni]` || `-verbose:class` || `+TraceClassLoading,+TraceClassUnloading` ||
|| `-` || `-verbose:gc` || `+PrintGC` ||
|| `-` || `-verbose:jni` || `+PrintJNIResolving` ||
|| `-Xbootclasspath[/a/p]:` || `-Xbootclasspath:` || ||
|| `-` || `-Xbootclasspath/a:` || ||
|| `-` || `-Xbootclasspath/p:` || ||
|| `-Xrun` || `-` || ||
|| `-agentlib:` || `-` || ||
|| `-agentpath:` || `-` || ||
|| `-javaagent:` || `-` || ||
|| `-Xnoclassgc` || `-` || `+ClassUnloading` ||
|| `-Xincgc` || `-` || `+UseConcMarkSweepGC,+CMSIncrementalMode` ||
|| `-Xnoincgc` || `-` || `+UseConcMarkSweepGC,+CMSIncrementalMode` ||
|| `-Xconcgc` || `-` || `+UseConcMarkSweepGC` ||
|| `-Xnoconcgc` || `-` || `+UseConcMarkSweepGC` ||
|| `-Xbatch` || `-` || `+BackgroundCompilation` ||
|| `-Xmn` || `-` || `MaxNewSize,NewSize` ||
|| `-Xms` || `-` || `InitialHeapSize` ||
|| `-Xmx` || `-` || `MaxHeapSize` ||
|| `-Xmaxf` || `-` || `MaxHeapFreeRatio` ||
|| `-Xminf` || `-` || `MinHeapFreeRatio` ||
|| `-Xss` || `-` || `ThreadStackSize` ||
|| `-Xoss` || `-` || _该参数被忽略，HotSpot不使用区分的Native和Java栈_ ||
|| `-Xmaxjitcodesize` || `-` || `ReservedCodeCacheSize` ||
|| `-green` || `-` || _HotSpot不支持Green线程，使用此参数无法启动JVM_ ||
|| `-native` || `-` || _该参数被忽略，HotSpot始终使用Native线路_ ||
|| `-Xsqnopause` || `-` || _该参数被忽略，注释为`EVM option`，但不知道是什么意思_ ||
|| `-Xrs` || `-` || `ReduceSignalUsage` ||
|| `-Xusealtsigs` || `-` || _该参数被忽略，为向前兼容保留_ ||
|| `-Xoptimize` || `-` || _该参数被忽略，同`-Xsqnopause`_ ||
|| `-Xprof` || `-` || ||
|| `-Xaprof` || `-` || ||
|| `-Xconcurrentio` || `-` || `+UseLWPSynchronization,-BackgroundCompilation,`<br>`DeferThrSuspendLoopCount=1,-UseTLAB,NewSizeThreadIncrease=16K` ||
|| `-Xinternalversion` || `-` || 打印内部版本并退出 ||
|| `-Dcom.sun.management` || `-` || 设置`System.Property`参数的同时`+ManagementServer` ||
|| `-X[int/comp/mixed]` || `-Xint` || ||
|| `-` || `-Xcomp` || ||
|| `-` || `-Xmixed` || ||
|| `-Xshare:[dump/on/auto/off]` || `-Xshare:dump` || `+DumpSharedSpaces` ||
|| `-` || `-Xshare:on` || `+UseSharedSpaces,+RequireSharedSpaces,+ForceSharedSpaces` ||
|| `-` || `-Xshare:auto` || `+UseSharedSpaces,-RequireSharedSpaces` ||
|| `-` || `-Xshare:off` || `-UseSharedSpaces,RequireSharedSpaces` ||
|| `-Xverify:[all/remote/none]` || `-Xverify:all` || `+BytecodeVerificationLocal,+BytecodeVerificationRemote` ||
|| `-` || `-Xverify:remote` || `-BytecodeVerificationLocal,+BytecodeVerificationRemote` ||
|| `-` || `-Xverify:none` || `-BytecodeVerificationLocal,-BytecodeVerificationRemote` ||
|| `-Xdebug` || `-` || ||
|| `-Xnoagent` || `-` || _该参数被忽略，为向前兼容保留_ ||
|| `-Xboundthreads` || `-` || `+UseBoundThreads` ||
|| `-Xloggc:` || `-` || `+PrintGC,+PrintGCTimeStamps,+TraceClassUnloading`<br>打印GC信息到指定文件 ||
|| `-Xcheck:jni` || `-` || ||

==参数的类型==
{{{
 bool, intx, uintx, ccstr
}}}
在代码中其实还可以看到一种为 `double` 型，但使用并不广泛，而且在HotSpot中很多场景未判断该类型，使用时可能导致JVM异常退回，详见 [http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=7183920 Bug ID 7183920].<br>
^注^：`ccstr` 是 `const char*` 的别名 

==参数运行时类型==
|| *类型* || *说明* ||
|| `develop` || 开发参数，仅在开发版中可修改，在产品版则为常量，不可修改 ||
|| `develop_pd` || *_应该是平台相关的开发属性，但未确认，求确认_* ||
|| `product` || 产品参数，在各个编译版本中始终可修改 ||
|| `product_pd` || *_应该是平台相关的产品属性，但未确认，求确认_* ||
|| `lp64_product` || 64位产品参数，基本同产品参数，但仅在64位系统下可修改，在非64位系统下则为常量 ||
|| `notproduct` || 非产品参数，公在开发版中可修改，在产品版则未申明该参数 ||
|| `diagnostic` || 需要通过参数 `-XX:+UnlockDiagnosticVMOptions` 解锁<br>用于保障JVM质量及排查JVM Bug使用，但这些参数默认不可见，且不推荐使用，当需要使用时通过Unlock打开参数 ||
|| `experimental` || 需要通过参数 `-XX:+UnlockExperimentalVMOptions` 解锁<br>用于实验的参数，这些参数可能能够提升性能，但这些参数未经严格测试，这些参数也可以通过 [https://code.google.com/p/hatter-source-code/wiki/jflag jflag] 打开 ||
|| `manageable` || 管理参数，为可运行时可修改的外部属性，参见 *`[参数属性]`* ||
|| `product_rw` || 产品运行时可写内部参数，参见 *`[参数属性]`* ||

==参数属性==
|| `external` || `manageable` 为属性为外部属性，其它属性都为内部属性 ||
|| `writeable` || `manageable` 及 `product_rw` 属性为运行时可写属性，即在JVM运行时动态可设置<br>对于`manageable`属性可以通过 [http://docs.oracle.com/javase/6/docs/technotes/tools/share/jinfo.html jinfo -flag] 命令设置，对于 `product_rw` 属性可以通`HotSpotDiagnosticMXBean` JMX来设置，也可以通过[https://code.google.com/p/hatter-source-code/wiki/jflag jflag]设置 ||

==参数设置来源==
|| `DEFAULT` || 系统默认值 ||
|| `COMMAND_LINE` || JVM创建时通过命令行指定，也称为`VM_CREATION` ||
|| `ENVIRON_VAR` || 根据系统环境指定，即在环境变量`_JAVA_OPTIONS`(Classic VM)或`JAVA_TOOL_OPTIONS`指定 ^[2]^ ||
|| `CONFIG_FILE` || 通过配置文件指定，通过参数`-XX:Flags=`指定，如果未指定则加载`.hotspotrc`配置文件 ||
|| `MANAGEMENT` || 通过`HotSpotDiagnosticMXBean`设置 ||
|| `ERGONOMIC` || 根据系统，或关联条件判断指定，如在未指定GC方式时JVM会根据`should_auto_select_low_pause_collector()`的结果，选择`UseConcMarkSweepGC`或`UseParallelGC` ||
|| `ATTACH_ON_DEMAND` || 通过`HotSpotVirtualMachine#setFlag(String name, String value)`设置 ||
|| `INTERNAL` || 通过`JVM_AccessVM{0}Flag`指定 (`{0}`取值为`Boolean`或`Int`)，但在源代码中未找到调用点，估计是给JNI或JVMTI使用 ||

==System.Properties参数==
|| *参数Key* || *说明* ||
|| `java.vm.specification.version` || `1.0` ||
|| `java.vm.specification.name` || `Java Virtual Machine Specification` ||
|| `java.vm.specification.vendor` || `Sun Microsystems Inc.` ||
|| `java.vm.version` || `VM_Version::vm_release()` ||
|| `java.vm.name` || `VM_Version::vm_name()` ||
|| `java.vm.vendor` || `VM_Version::vm_vendor()` ||
|| `java.vm.info` || `VM_Version::vm_info_string()` ||
|| `java.ext.dirs` || 可选包扩展机制，可通过`jvm_args`参数设置，可指定一个或多个文件夹，默认设置则为标准可选包安装目录 ^[5][6]^ ||
|| `java.endorsed.dirs` || 包升级替换机制，可通过`jvm_args`参数设置，可指定一个或多个文件夹，默认设置为`<java-home>/lib/endorsed` ^[5][7]^ ||
|| `sun.boot.library.path` || ||
|| `java.library.path` || ||
|| `java.home` || ||
|| `sun.boot.class.path` || ||
|| `java.class.path` || *不可通过`jvm_args`设置* ||

|| *参数Key* || *说明* ||
|| `java.compiler` || ||
|| `sun.java.command` || *不可通过`jvm_args`设置* ||
|| `sun.java.launcher` || *不可通过`jvm_args`设置* ||
|| `sun.java.launcher.pid` || ||
|| `java.vendor.url.bug` || ||
|| `sun.boot.library.path` || ||

==废弃的参数==
|| *参数* || *开始弃用版本* || *禁止使用版本* || *说明* ||
|| `UseTrainGC` || 1.5 || 1.7 || incremental (有时也称为train) low pause collector：如果要使用它，则可通过命令行-XX:+UseTrainGC来激活。这个collector从J2SE Platform 1.4.2版本之后就不再改变了，同时也停止了开发活动。 ^[3][4]^ ||
|| `UseSpecialLargeObjectHandling` || 1.5 || 1.7 || ||
|| `UseOversizedCarHandling` || 1.5 || 1.7 || ||
|| `TraceCarAllocation` || 1.5 || 1.7 || ||
|| `PrintTrainGCProcessingStats` || 1.5 || 1.7 || ||
|| `LogOfCarSpaceSize` || 1.5 || 1.7 || ||
|| `OversizedCarThreshold` || 1.5 || 1.7 || ||
|| `MinTickInterval` || 1.5 || 1.7 || ||
|| `DefaultTickInterval` || 1.5 || 1.7 || ||
|| `MaxTickInterval` || 1.5 || 1.7 || ||
|| `DelayTickAdjustment` || 1.5 || 1.7 || ||
|| `ProcessingToTenuringRatio` || 1.5 || 1.7 || ||
|| `MinTrainLength` || 1.5 || 1.7 || ||
|| `AppendRatio` || 1.6u10 || 1.7 || ||
|| `DefaultMaxRAM` || 1.6u18 || 1.7 || ||
|| `DefaultInitialRAMFraction` || 1.6u18 || 1.7 || ||

<wiki:comment> 不要在参考资料中插入或删除引用 </wiki:comment>
===参考资料===
 `[1].` openjdk-6-src-b20-21_jun_2010.tar.gz<br>
 `[2].` http://docs.oracle.com/javase/1.5.0/docs/guide/jvmti/jvmti.html#tooloptions<br>
 `[3].` http://www.cnblogs.com/z-zw/archive/2010/09/30/1839394.html<br>
 `[4].` http://www.oracle.com/technetwork/java/gc1-4-2-135950.html<br>
 `[5].` http://blog.csdn.net/flyingstarwb/article/details/7018085<br>
 `[6].` http://docs.oracle.com/javase/1.4.2/docs/guide/extensions/spec.html<br>
 `[7].` http://docs.oracle.com/javase/6/docs/technotes/guides/standards/index.html<br>


