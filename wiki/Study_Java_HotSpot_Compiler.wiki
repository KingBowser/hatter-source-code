#summary Compiler in Java, HotSpot
#sidebar TableOfContents

==安装==
 # 下载二进制文件，或源代码自行编译：https://kenai.com/projects/base-hsdis/downloads
 # 在Linux上将文件 linux-hsdis-amd64.so 改名为 libhsdis-amd64.so
 # 复制文件到目录： $JAVA_HOME/jre/lib/amd64/server

==使用==
通过下面命令：
{{{
java -XX:+UnlockDiagnosticVMOptions -XX:+PrintAssembly InterThreadLatency
}}}
或
{{{
java -XX:+UnlockDiagnosticVMOptions '-XX:CompileCommand=print,*PongRunner.run' InterThreadLatency
}}}

==Examining generated code==
The following HotSpot options (with an -XX: prefix on the command line) require OpenJDK 7 and an externally loadable disassembler plugin:

 * `+PrintAssembly` print assembly code for bytecoded and native methods
 * `+PrintNMethods` print nmethods as they are generated
 * `+PrintNativeNMethods` print native method wrappers as they are generated
 * `+PrintSignatureHandlers` print native method signature handlers
 * `+PrintAdapterHandlers` print adapters (i2c, c2i) as they are generated
 * `+PrintStubCode` print stubs: deopt, uncommon trap, exception, safepoint, runtime support
 * `+PrintInterpreter` print interpreter code

These flags are "diagnostic", meaning that they must be preceded by `-XX:+UnlockDiagnosticVMOptions`. On the command line, they must all be preceded by -XX:. They may also be placed in a flags file, .hotspotrc by default, or configurable as `-XX:Flags=myhotspotrc.txt`.

The disassembly output is annotated with various kinds of debugging information, such as field names and source locations. The quality of this information improved markedly in January 2010 (bug fix 6912062).


===参考资料===
`[1].` http://mechanical-sympathy.blogspot.com/2013/06/printing-generated-assembly-code-from.html<br>
`[2].` https://wikis.oracle.com/display/HotSpotInternals/PrintAssembly<br>
`[3].` https://kenai.com/projects/base-hsdis<br>