#summary HotSpot OutOfMemoryError解析

当Java进度无法分配足够内存运行时将会抛出OutOfMemoryError：
 1. *`java.lang.OutOfMemoryError: Java heap space`*
 <code language="Java">List<String> list = new ArrayList<String>();
while(true) list.add(new String("Consume more memory!"));</code>
 2. *`java.lang.OutOfMemoryError: PermGen space`*
 <code language="Java">List<Class<?>> classes = new ArrayList<Class<?>>();
while(true){
    MyClassLoader cl = new MyClassLoader();
    try{
        classes.add(cl.loadClass("Dummy"));
    }catch (ClassNotFoundException e) {
        e.printStackTrace();
    }
}</code>
 <code language="Java">List<String> list = new ArrayList<String>();
int i=0;
while(true) list.add(("Consume more memory!"+(i++)).intern());
 </code>
 3. *`java.lang.OutOfMemoryError: unable to create new native thread`*
 在JVM中每启动一个线程都会分配一块本地内存，用于存放线程的调用栈，该空间仅在线程结束时释放。当没有足够本地内存创建线程时就会出现该错误。通过以下代码可以很容易再现该问题：
 <code language="Java">while(true){
    new Thread(new Runnable(){
        public void run() {
            try {
                Thread.sleep(60*60*1000);
            } catch(InterruptedException e) { }        
        }    
    }).start();
}</code>
 4. *`java.lang.OutOfMemoryError: Direct buffer memory`*
 <code language="Java">List<ByteBuffer> list = new ArrayList<ByteBuffer>();
while(true) list.add(ByteBuffer.allocateDirect(10000000)); </code>
 5. *`java.lang.OutOfMemoryError: request <size> bytes for <reason>.`*
 
===参考资料===
`[1].` http://java.sun.com/developer/technicalArticles/J2SE/monitoring/<br>
`[1].` http://eyalsch.wordpress.com/2009/06/17/oome/<br>
