#summary Java Object Layout

====规则1：所有的对象都按8字节对齐====
====规则2：类属性按如下规则排序：====
  `1. doubles and longs`<br>
  `2. ints and floats`<br>
  `3. shorts and chars`<br>
  `4. booleans and bytes`<br>
  `5. references`<br>
  对象属性按各自间隙对齐，即按4字节对齐，通常情况下如果按4字节对象，那么读入4个字节到寄存器时性能要高的多
 * Rule 3: Fields that belong to different classes of the hierarchy are NEVER mixed up together. Fields of the superclass come first, obeying rule 2, followed by the fields of the subclass.
 * Rule 4: Between the last field of the superclass and the first field of the subclass there must be padding to align to a 4 bytes boundary.
 * Rule 5: When the first field of a subclass is a double or long and the superclass doesn't align to an 8 bytes boundary, JVM will break rule 2 and try to put an int, then shorts, then bytes, and then references at the beginning of the space reserved to the subclass until it fills the gap.


===参数资料===
`[1].` http://www.codeinstructions.com/2008/12/java-objects-memory-structure.html<br>

