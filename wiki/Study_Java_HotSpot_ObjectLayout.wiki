#summary Java Object Layout

 * 规则1：所有对象都按8字节对齐
 * 规则2：类属性按如下规则排序：
  # long, double
  # int, float
  # char, short
  # byte, boolean
  # reference
  对象按8字节对齐
 * Rule 2: class attributes are ordered like this: first longs and doubles; then ints and floats; then chars and shorts; then bytes and booleans, and last the references. The attributes are aligned to their own granularity.
 * Rule 3: Fields that belong to different classes of the hierarchy are NEVER mixed up together. Fields of the superclass come first, obeying rule 2, followed by the fields of the subclass.
 * Rule 4: Between the last field of the superclass and the first field of the subclass there must be padding to align to a 4 bytes boundary.
 * Rule 5: When the first field of a subclass is a double or long and the superclass doesn't align to an 8 bytes boundary, JVM will break rule 2 and try to put an int, then shorts, then bytes, and then references at the beginning of the space reserved to the subclass until it fills the gap.


===参数资料===
`[1].` http://www.codeinstructions.com/2008/12/java-objects-memory-structure.html<br>

