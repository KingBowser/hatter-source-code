#summary HotSpot Serviceability
#sidebar TableOfConents

<b>The Serviceability Agent(SA).</b> The Serviceability Agent is a Sun private component in the HotSpot repository that was developed by HotSpot engineers to assist in debugging HotSpot. They then realized that SA could be used to craft serviceability tools for end users since it can expose Java objects as well as HotSpot data structures both in running processes and in core files.

[http://hatter-source-code.googlecode.com/svn/trunk/attachments/wiki/java/oop_klass.png]

 * <font color="red"><b>`sun.jvm.hotspot.tools.Tool`</b></font>
  * `sun.jvm.hotspot.tools.FinalizerInfo`
  * `sun.jvm.hotspot.tools.FlagDumper`
  * `sun.jvm.hotspot.tools.HeapDumper`
  * `sun.jvm.hotspot.tools.HeapSummary`
  * `sun.jvm.hotspot.tools.JInfo`
  * `sun.jvm.hotspot.tools.JMap`
  * `sun.jvm.hotspot.tools.JSnap`
  * `sun.jvm.hotspot.tools.JStack`
  * `sun.jvm.hotspot.tools.ObjectHistogram`
  * `sun.jvm.hotspot.tools.PermStat`
  * `sun.jvm.hotspot.tools.PMap`
  * `sun.jvm.hotspot.tools.PStack`
  * `sun.jvm.hotspot.tools.StackTrace`
  * `sun.jvm.hotspot.tools.SysPropsDumper`
  * `sun.jvm.hotspot.tools.jcore.ClassDump`
  * `sun.jvm.hotspot.tools.joql.JSDB`
  * `sun.jvm.hotspot.tools.joql.JOQL`

 * `sun.jvm.hotspot.runtime.VM`
 

 * `sun.jvm.hotspot.utilities.*`
  * `CStringUtilities`
  * `ObjectReader`
  * `SystemDictionaryHelper`


Visitors:
{{{
sun.jvm.hotspot.asm.InstructionVisitor
	public interface InstructionVisitor {
sun.jvm.hotspot.code.CodeCacheVisitor
	public interface CodeCacheVisitor {
sun.jvm.hotspot.compiler.OopMapVisitor
	public interface OopMapVisitor {
sun.jvm.hotspot.debugger.cdbg.LineNumberVisitor
	public interface LineNumberVisitor {
sun.jvm.hotspot.debugger.cdbg.ObjectVisitor
	public interface ObjectVisitor {
sun.jvm.hotspot.debugger.cdbg.TypeVisitor
	public interface TypeVisitor {
sun.jvm.hotspot.interpreter.BytecodeVisitor
	public interface BytecodeVisitor {
sun.jvm.hotspot.memory.StringTable
	public interface StringVisitor {
sun.jvm.hotspot.memory.SymbolTable
	public interface SymbolVisitor {
sun.jvm.hotspot.memory.SystemDictionary
	public static interface ClassVisitor {
	public static interface ClassAndLoaderVisitor {
sun.jvm.hotspot.oops.HeapVisitor
	public interface HeapVisitor {
sun.jvm.hotspot.oops.OopVisitor
	public interface OopVisitor {
sun.jvm.hotspot.oops.RawHeapVisitor
	public interface RawHeapVisitor extends AddressVisitor {
sun.jvm.hotspot.runtime.AddressVisitor
	public interface AddressVisitor {
sun.jvm.hotspot.runtime.PerfMemory
	public static interface PerfDataEntryVisitor {
sun.jvm.hotspot.utilities.soql.ObjectVisitor
	public interface ObjectVisitor {
}}}


Sample:
{{{
  private void readSystemProperties() {
     InstanceKlass systemKls = getSystemDictionary().getSystemKlass();
     systemKls.iterate(new DefaultOopVisitor() {
                               ObjectReader objReader = new ObjectReader();
                               public void doOop(sun.jvm.hotspot.oops.OopField field, boolean isVMField) {
                                  if (field.getID().getName().equals("props")) {
                                     try {
                                        sysProps = (Properties) objReader.readObject(field.getValue(getObj()));
                                     } catch (Exception e) {
                                        if (Assert.ASSERTS_ENABLED) {
                                           e.printStackTrace();
                                        }
                                     }
                                  }
                               }
                        }, false);
  }
}}}


===参数资料===
`[1].` http://openjdk.java.net/groups/hotspot/docs/Serviceability.html<br>