#summary Java Memory Model
#sidebar TableOfContents


[http://www.cs.umd.edu/~pugh/java/memoryModel/ Memory Model] >> [http://gee.cs.oswego.edu/dl/jmm/cookbook.html Cookbook]

<table border="1">
<tr>
 <td>*Can Reorder*</td>
 <td colspan="3" align="center"> _2nd operation_ </td></tr>
<tr>
 <td> _1st operation_ </td>
 <td>`Normal Load, Normal Store`</td>
 <td>`Volatile Load, MonitorEnter`</td>
 <td>`Volatile Store, MonitorExit`</td>
</tr>
<tr>
 <td>`Normal Load, Normal Store`</td>
 <td> </td>
 <td> </td>
 <td>No</td>
</tr>
<tr>
 <td>`Volatile Load, MonitorEnter`</td>
 <td>No</td>
 <td>No</td>
 <td>No</td>
</tr>
<tr>
 <td>`Volatile store, MonitorExit`</td>
 <td> </td>
 <td>No</td>
 <td>No</td>
</tr>
</table>

|| *Processor* || *LoadStore* || *LoadLoad* || *StoreStore* || *StoreLoad* || *Data dependency orders loads?* || *Atomic Conditional* || *Other Atomics* || *Atomics provide barrier?* ||
|| `sparc-TSO` || `no-op` || `no-op` || `no-op` || `membar(StoreLoad)` || `yes` || `CAS:casa` || `swap, ldstub` || `full` ||
|| `x86` || `no-op` || `no-op` || `no-op` || `mfence or cpuid or locked insn` || `yes` || `CAS: cmpxchg` || `xchg, locked insn` || `full` ||
|| `ia64` || `combine with st.rel or ld.acq` || `ld.acq` || `st.rel` || `mf` || `yes` || `CAS:cmpxchg` || `xchg,fetchadd` || `target +acq/rel` ||


===参考资料===
`[1].` http://gee.cs.oswego.edu/dl/jmm/cookbook.html<br>
`[2].` http://www.cs.umd.edu/~pugh/java/memoryModel/<br>