#summary Open Authentication
#sidebar TableOfContents


==一、OTP==
  OTP即 One-Time Password。是目前广泛使用的2阶段密码验证技术，如 [http://support.google.com/accounts/bin/topic.py?hl=en&topic=28786&parent=2373945&ctx=topic 2-step verification] <br>
 使用如下所示：<br>
 [http://hatter-source-code.googlecode.com/svn/trunk/attachments/wiki/otp/2-step-with-red-box.png] <br>
 输入如下显示的6位数字： <br>
 [http://hatter-source-code.googlecode.com/svn/trunk/attachments/wiki/otp/google_2step_iphone.png]


==二、规范==
[http://www.openauthentication.org/specification]

 * HOTP 【 An HMAC-Based OTP Algorithm (RFC 4226) 】
 [http://www.ietf.org/rfc/rfc4226.txt TXT] [http://tools.ietf.org/html/rfc4226 HTML] [http://tools.ietf.org/pdf/rfc4226.pdf PDF]
 * TOTP【 Time-based One-time Password Algorithm (RFC 6238) 】
 [http://www.ietf.org/rfc/rfc6238.txt TXT] [http://tools.ietf.org/html/rfc6238 HTML] [http://tools.ietf.org/pdf/rfc6238.pdf PDF]
 * OCRA 【 OATH Challenge/Response Algorithms Specification (RFC 6287) 】
 [http://www.ietf.org/rfc/rfc6287.txt TXT] [http://tools.ietf.org/html/rfc6287 HTML] [http://tools.ietf.org/pdf/rfc6287.pdf PDF]

==三、实现==
 * Google Authenticator
 [http://code.google.com/p/google-authenticator/]
 * Hatter's Go Lang Implement
 [https://code.google.com/p/hatter-source-code/source/browse/trunk/golang/googleauth/googleauth.go]

==四、其它OTP==
* Celf https://getclef.com/ -  Two-factor authentication from the future.


----

 * https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2
 * https://support.google.com/accounts/answer/1066447?hl=en&ref_topic=2784804
 * https://www.saaspass.com/Authenticator.html
 * http://www.multiotp.net/